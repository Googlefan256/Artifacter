name: Rust

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      matrix:
        target:
          - arm64-unknown-linux-musl
        include:
          - target: arm64-unknown-linux-musl
            os: arm64-ubuntu-latest

    runs-on: ["ubuntu-latest"]

    steps:
      - name: Setup code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Python
        uses: actions/setup-python@v2
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install gcc cmake g++ pkg-config libfontconfig1-dev git-restore-mtime -y

      - name: Restore mtime
        run: git restore-mtime
      
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -r

      - name: Package for linux-musl
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          mkdir build
          cp target/release/artifacter build/artifacter
          cp LICENSE build/LICENSE
          cp README.md build/README.md
          cp -r assets build/assets
          zip -r build/artifacter.zip build
      - name: Push build/artifacter.zip
        if: matrix.target == 'x86_64-unknown-linux-musl'
        uses: actions/upload-artifact@v2
        with:
          name: artifacter
          path: build/artifacter.zip