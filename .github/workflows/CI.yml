name: Build and Publish Docker

on:
  push:
    branches:
      - master

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: artifacter
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cross openssl
        id: openssl
        run: |
          curl -O http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl-dev_1.1.1n-0+deb10u6_arm64.deb && \
          ar p libssl-dev_1.1.1n-0+deb10u6_arm64.deb  data.tar.xz | tar Jxvf - && \
          rm -rf libssl-dev_1.1.1n-0+deb10u6_arm64.deb && \
          mkdir -p target && \
          mv usr target/usr && \
          cp target/usr/include/aarch64-linux-gnu/openssl/opensslconf.h target/usr/include && \
          export AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_DIR="$(pwd)/target/usr/" && \
          export AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR="$(pwd)/target/usr/lib/aarch64-linux-gnu/" && \
          echo "::set-output name=AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_DIR::$AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_DIR" && \
          echo "::set-output name=AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR::$AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR"
      - name: Build cross platform
        uses: neodyland/rust-ci@a08c2e949f5774fa65e321840a3666c71e230ef2
        with:
          package: artifacter
          install-rustup: false
        env:
          AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_DIR: ${{ steps.openssl.outputs.AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_DIR }}
          AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR: ${{ steps.openssl.outputs.AARCH64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
